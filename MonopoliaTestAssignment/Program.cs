/*
 *  Разработать консольное .NET приложение для склада, удовлетворяющее следующим требованиям:

- Построить иерархию классов, описывающих объекты на складе - паллеты и коробки:

    - Помимо общего набора стандартных свойств (ID, ширина, высота, глубина, вес), паллета может содержать в себе коробки.

    - У коробки должен быть указан срок годности или дата производства. Если указана дата производства, то срок годности вычисляется из даты производства плюс 100 дней.

        - Срок годности и дата производства — это конкретная дата без времени (например, 01.01.2023).

    - Срок годности паллеты вычисляется из наименьшего срока годности коробки, вложенной в паллету. Вес паллеты вычисляется из суммы веса вложенных коробок + 30кг.

    - Объем коробки вычисляется как произведение ширины, высоты и глубины.

    - Объем паллеты вычисляется как сумма объема всех находящихся на ней коробок и произведения ширины, высоты и глубины паллеты.

    - Каждая коробка не должна превышать по размерам паллету (по ширине и глубине).

- Консольное приложение:

    - Получение данных для приложения можно организовать одним из способов:

        - Генерация прямо в приложении

        - Чтение из файла или БД

        - Пользовательский ввод

    - Вывести на экран:

        - Сгруппировать все паллеты по сроку годности, отсортировать по возрастанию срока годности, в каждой группе отсортировать паллеты по весу.

        - 3 паллеты, которые содержат коробки с наибольшим сроком годности, отсортированные по возрастанию объема.

- (Опционально) Покрыть функционал unit-тестами.

- (Очень желательно) Код должен быть написан в соответствии с https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/coding-style/coding-conventions

- (Совершенно не обязательно) Вместо консольного приложения сделать полноценный пользовательский интерфейс. На оценку решения никак не влияет.
 */

using MonopoliaTestAssignment;
using MonopoliaTestAssignment.Models;

SQLitePCL.Batteries.Init();

using (var db = new WarehouseDbContext())
{
    var pallet = new Pallet { Width = 10, Height = 15, Depth = 20 };
    db.Pallets.Add(pallet);

    var box1 = new Box
    {
        Width = 10,
        Height = 5,
        Depth = 10,
        Weight = 6,
        Date = new DateOnly(2025, 6, 1),
        IsExpirationDate = true,
        Pallet = pallet
    };

    var box2 = new Box
    {
        Width = 10,
        Height = 15,
        Depth = 10,
        Weight = 3,
        Date = new DateOnly(2024, 4, 10),
        IsExpirationDate = false,
        Pallet = pallet
    };

    db.Boxes.AddRange(box1, box2);
    db.SaveChanges();
}
    